# ---
# Configuration options
# ---

# Specific configurations for admin purposes
Admin:

  # keep_monitor: whether to use the code as always on
  keep_monitor: True

  # waiting_time_in_sec: how much time to sleep before checking if there is a new
  #                      simulation to append to database
  waiting_time_in_sec: 3600

# MESA specific options
MESA:

  # template_directory: location of MESA source template
  template_directory: "/home/asimazbunzel/Developments/stevma/example/templates"

  # runs_directory: directory with MESA simulations (their output)
  runs_directory: "/home/asimazbunzel/Developments/stevma/example/runs"

  # id: identificator for all the simulations. Options are `mesastar` and `mesabinary`
  id: "mesabinary"

  # options needed for a summary of a MESAbinary simulation. They are used only when the id flag
  # is equal to "mesabinary"
  mesabinary:

    # mesa_dir: $MESA_DIR value
    mesa_dir: "/home/asimazbunzel/Developments/mesa-r15140"

    # evolve_both_stars: whether MESAbinary evolves two stars or a star and a point-mass
    evolve_both_stars: False

    # log_directory_*: MESAbinary and MESAstar output folders
    log_directory_binary: "LOGS_binary"
    log_directory_star1: "LOGS1"
    log_directory_star2: ""

    # history_name_*: filenames of MESA output
    history_name_binary: "binary_history.data"
    history_name_star1: "history.data"
    history_name_star2: ""

    # termination_*: where termination code is stored
    termination_directory: "termination_codes"
    termination_name: "termination_code_star_plus_point_mass"

    # core_collapse_*: directory and files with information of core-collapse (in case there is)
    core_collapse_directory: "cc_data"
    core_collapse_name_binary: "binary_at_core_collapse.data"
    core_collapse_name_star1: "star_at_core_collapse.data"
    core_collapse_name_star2: ""

  # as the previous options but for the case of id = "mesastar"
  mesastar:

    # mesa_dir: $MESA_DIR value
    mesa_dir: "/home/asimazbunzel/Developments/mesa-r15140"

# Database manager options
Stevdb:

  # replace_data: whether to re-analyze a stellar evolution and replace it in the database or not
  replace_data: True

  # drop_tables: remove records of all tables
  drop_tables: True

  # database_name: filename of database (created with stevma)
  database_name: "/home/asimazbunzel/Developments/stevma/example/example-grid.db"

  # track_changes: flag to control whether the code pushes changes to a git repo or not
  #                this only works if `database_name` is located in an actual git repo
  track_changes: false

  # history_columns_list: filename with the list of MESA history_column names to save in database
  history_columns_list : "example/history.yaml"

  # track_*: flag for the different phases that the database manager will track
  # id_for_*_in_database: name of the tables in the database with particular phases in the
  #                       evolution
  track_initials: True
  id_for_initials_in_database: "Initials"
  track_finals: True
  id_for_finals_in_database: "Finals"
  id_for_core_collapse_in_database: "CoreCollapse"
  track_xrb_phase: False
  id_for_xrb_phase_in_database: ""
  track_ce_phase: False
  id_for_ce_phase_in_database: ""
